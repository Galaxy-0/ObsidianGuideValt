# AI学习助手完整使用文档

# 第一部分：基础功能

## 1 简介
AI学习助手是一款集AI问答、阅读、笔记于一体的学习辅助软件，目前已包含完整功能。有了AI帮忙，加上一个简单好用的书籍、笔记系统，对于学习晦涩复杂的知识体系，比如哲学、政治经济学、精神分析、计算机原理、包括AI技术本身会更直白、高效、成体系。

AI学习助手的主要功能是基于一款笔记软件，Obsidian。AI学习助手集成了学习资料、笔记功能、AI功能等。

## 2 下载与安装
通过百度云盘下载AI学习助手1.0
链接: https://pan.bAIdu.com/s/1qaMruokoMFrY7vjlzlBIVA?pwd=7exm 
提取码: 7exm

打开下载好的文件夹，双击进入相关软件安装包。文件夹中包含多个文件，其中有一个红色圆圈标记的"相关软件安装包"文件夹。

双击运行Obsidian-1.8.10.exe，安装软件。在软件列表中找到"Obsidian-1.8.10.exe"文件（显示为应用程序，约260.416 KB大小）。

安装Obsidian笔记软件，建议不要安装在C盘。安装程序会显示"选择安装位置"对话框，包含以下选项：
- 目标文件夹：默认为"F:\Programs\Obsidian"（可以修改）
- 浏览按钮：用于选择其他安装路径
- 所需空间：297.5 MB
- 可用空间：149.1 GB
- 版本信息：Obsidian 1.8.10
- 底部按钮：上一步、安装、取消

[!info] 如果你已经安装Obsidian，请跳过安装步骤。打开你的Obsidian，在**设置-关于**页面，确保你安装的是v1.8.10最新版本。在"关于"页面中：
- 左侧菜单显示各个设置选项（关于、编辑器、文件与链接、外观、快捷键、核心插件、第三方插件）
- 当前版本：v1.8.10  
- 包含更新链接和语言设置
- 右上角有"检查更新"按钮
- 自动更新功能可以开启或关闭
- 语言设置为"简体中文"

## 3 初步配置AI学习助手

>[!tip] AI学习助手软件设置参考视频：[【录播剪辑】AI学习助手1.0-软件设置_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1xbLizPEh3/?spm_id_from=333.337.search-card.all.click&vd_source=9de7c3a67fd42814f6579e0482d4d3ad)

### 3.1 配置文件仓库
安装好Obsidian后，接下来我们要配置好Obsidian仓库。首先，新建一个空的文件夹，文件夹名不限（示例为Obsidian vaults），该文件夹主要用于放置AI学习助手相关文件，建议不要放置在C盘。在文件管理器中，你会看到新创建的"obsidian vaults"文件夹与其他文件夹（如"ht_cache"、"视频项目"）并列显示。

接下来，回到下载好的AI学习助手文件夹，将该文件夹整个拷贝到刚才创建的空的文件夹（示例为Obsidian vaults）中。在文件列表中可以看到：
- AI学习助手-1.0.1（文件夹，修改日期：2025/5/7 19:50）
- 柯察【AI学习助手-1.0】文件夹（修改日期：2025/5/7 19:48）
- 相关软件安装包（文件夹，修改日期：2025/5/7 19:50）

将AI学习助手-1.0.1文件夹复制粘贴到Obsidian vaults文件夹中。

接下来，就可以打开Obsidian软件，在软件内配置AI学习助手，打开Obsidian并选择语言。
>[!info] 注意：由于大量第三方插件未进行本地化，因此改语言选项仅能改变Obsidian的语言设置以及自带本地化的插件。

首次启动Obsidian时，会显示欢迎界面，包含：
- Obsidian紫色钻石Logo和版本号（Version 1.8.10）
- Quick start按钮（快速开始）
- Create new vault：创建新仓库选项，包含"Create"按钮
- Open folder as vault：打开文件夹作为仓库，包含"Open"按钮
- Open vault from Obsidian Sync：从同步服务打开仓库，包含"Sign in"按钮
- 底部语言选择框：默认为"English"，可以点击更改为简体中文

选择语言后，点击"打开本地仓库"（Open folder as vault），在文件选择器中导航到Obsidian vaults文件夹，选择其中的AI学习助手-1.0.1文件夹。文件选择器显示：
- 导航路径：此电脑 > 本地磁盘 (E:) > obsidian vaults
- 文件列表中的"AI学习助手-1.0.1"文件夹
- 底部选择区域显示"文件夹: AI学习助手-1.0.1"
- 右下角"选择文件夹"按钮

### 3.2 加载AI学习助手
首次加载AI学习助手时，软件会弹出信任仓库作者的安全确认对话框。对话框标题为"你是否信任这个仓库的作者？"，内容说明：
- 这个仓库内容未知，并且覆盖了一些插件
- 请注意，未知来源的插件将带来数据和隐私风险
- 如果你不信任这仓库的作者，建议你在安全模式中打开这仓库，以防止仓库中插件运行
- 底部有两个按钮："信任仓库作者并启用插件"和"在安全模式中打开这仓库"

接下来，AI学习助手的相关内容会显示在Obsidian的左边栏，包括：
- 随笔·白板
- 学习资料（红色框标出的区域包含）
- 阅读笔记
- AI对话自动存档
- AI快捷指令
- Y-导入笔记
- Z-附件资料夹

底部显示当前仓库名称"AI学习助手-1.0.1"。

右侧还显示AI助手界面，包含相关笔记（Relevant Notes）和建议提示（Suggested Prompts）等功能区域。

之后要选择、添加、删除、重命名仓库，点击左下方的仓库管理按钮即可。

至此，AI学习助手的本体已经安装好了。你现在已经可以阅读学习资料文件夹里面的哲学、历史、政治经济学教材和书籍，后续还会添加精神分析基础、数学物理、AI辅助编程、AI与计算机技术等资料。

## 4 Obsidian使用指南
Obsidian本体的功能很多，对于AI学习助手的使用无需再进行手动配置，直接开始上手摸索即可。

>[!info] Obsidian软件的使用手册可以参照以下链接：
>[由此开始 - Obsidian 中文帮助 - Obsidian Publish](https://publish.obsidian.md/help-zh/%E7%94%B1%E6%AD%A4%E5%BC%80%E5%A7%8B)

Obsidian主界面主要分左边栏，主体，右边栏：

**Obsidian主界面布局说明**：
- **最左边一列**：插件栏，包含各种功能插件的快捷按钮
- **左侧区域**：仓库的文件浏览器，显示文件夹结构和文件列表
- **主体部分**：文件显示的位置，即看书、写笔记的主要工作区域
- **右边栏**：包含大纲、AI对话框等辅助功能面板

### 4.1 自带功能
#### 4.1.1 基础设置
点击Obsidian左下角的**齿轮按钮**打开设置页面，设置界面结构如下：

**Obsidian设置页面结构**：
- **左侧设置菜单**（按顺序排列）：
  - **基础设置区域**（红框标出）：
    - 关于 - 版本信息和语言设置
    - 编辑器 - 编辑相关设置  
    - 文件与链接 - 文件管理设置
    - 外观 - 主题和界面设置
    - 快捷键 - 键盘快捷键配置
  - **核心插件** - Obsidian内置插件管理
  - **第三方插件** - 社区插件管理
  
- **右侧内容区域**：显示当前选中设置项的具体配置选项
- **底部**：左下角有设置齿轮图标（红框标出）用于返回主界面

以下是一些比较重要的基础设置：

##### 4.1.1.1 关于
用于检查更新、调整语言等功能

##### 4.1.1.2 编辑器
用于编写文档的设定。Obsidian标准格式叫markdown（.md）格式，特点是用代码表达格式。*比如给一句话加斜体，只要在句子两端加一个星号。* 

**查看Markdown源码的操作步骤**：
1. 在文件窗口的右上角找到三个点的菜单按钮
2. 点击菜单中的"源码模式"选项
3. 即可查看当前文档的markdown格式源代码

**Markdown源码示例**：
```markdown
# 一级标题
## 二级标题
*斜体文字*
**粗体文字**
- 无序列表项
1. 有序列表项
[链接文字](链接地址)
```

用Obsidian写笔记需要使用markdown语言，对于格式的调整需要通过源码的方式进行设置，对于初学者不太友好，因此，AI学习助手默认添加了第三方插件Editing Toolbar，可以像编辑word文档一样修改、添加格式了。

**Editing Toolbar工具栏功能说明**：
- 工具栏位于编辑器顶部，包含常用格式化按钮
- 包含粗体、斜体、标题、列表、链接等快捷格式按钮
- 支持一键插入表格、代码块、引用等markdown元素
- 提供所见即所得的编辑体验，无需手动编写markdown语法
关于Editing Toolbar，请参考：[[#4.2.1 Editing Toolbar 格式工具栏]]。
学习更多markdown语法，请参考：[Markdown 链接语法 | Markdown 教程](https://markdown.com.cn/basic-syntax/links.html)

##### 4.1.1.3 外观
**外观设置页面操作步骤**：
1. 在设置页面左侧菜单中点击"外观"选项
2. 在右侧内容区域找到"主题"部分
3. 点击"管理"按钮即可进入主题选择界面

**主题浏览与下载界面**：
- **主题列表**：显示各种可用的Obsidian主题，包括深色、浅色等不同风格
- **预览功能**：可以预览每个主题的效果
- **一键安装**：点击喜欢的主题名称，系统会自动下载并应用
- **立即生效**：下载完成后主题即刻应用到整个Obsidian界面

##### 4.1.1.4 文件与链接
该页面主要设置新建或删除文档位置。

**文件与链接设置的重要配置**：

**（1）新建笔记的默认位置设置**：
- **配置项**："新文件的默认位置"
- **默认设置**：`随笔·白板`文件夹
- **功能说明**：所有新创建的笔记文件都会自动保存到此文件夹中

点击左上角按钮X，可以退出设置。在AI学习助手仓库里面，就可以看到`随笔·白板`文件夹。所有新创建的笔记、白板都放在这里。
**随笔·白板文件夹在界面中的位置**：
- 位于左侧文件浏览器的根目录下
- 文件夹图标为文件夹形状，有清晰的文字标识
- 可以展开查看内部的所有笔记文件
- 支持拖拽操作来组织文件结构

在系统文件浏览器里面，也可以找到`随笔·白板`文件夹。
**在系统文件浏览器中的位置**：
- 可以在操作系统的文件管理器中找到`随笔·白板`文件夹
- 路径位于：[Obsidian仓库根目录]/随笔·白板/
- 支持直接在文件管理器中编辑、复制、移动文件
- 与Obsidian内部的文件显示保持同步

**（2）附件文件的默认存储位置**：
- **附件类型**：除了笔记以外的所有文件，包括图片、音频、视频、PDF等
- **存储位置**：`Z-附件资料夹/附件材料`文件夹
- **自动管理**：系统会自动将所有附件统一存储到此位置
- **双向访问**：在AI学习助手侧边栏和系统文件浏览器中都可以访问
- **组织结构**：保持仓库整洁，方便管理和备份

**Z-附件资料夹的功能特点**：
- 统一管理所有非文本文件
- 便于批量备份和整理
- 避免附件散布在各个文件夹中
- 支持子文件夹分类存储

##### 4.1.1.5 快捷键
快捷键一栏可自行设定Obsidian软件的快捷键。

#### 4.1.2 核心插件
核心插件是Obsidian自带的一些功能，可以在核心插件页面选择打开或关闭

**核心插件管理界面**包含以下功能：
- **左侧菜单**：显示"核心插件"被选中（红框标出）
- **右侧插件列表**：显示所有可用的核心插件，每个插件都有开关按钮控制启用/禁用状态：
  - 白板 (Canvas) - 用于创建可视化笔记布局
  - 笔记重组 (Note composer) - 重新组织笔记结构  
  - 标签列表 (Tag pane) - 显示和管理标签
  - 出链 (Outgoing links) - 显示当前笔记的外向链接
  - 大纲 (Outline) - 显示笔记的标题结构
  - 发布 (Publish) - 用于发布笔记到Obsidian Publish
  - 反向链接 (Backlinks) - 显示引用当前笔记的其他笔记
  - 工作区 (Workspaces) - 管理不同的工作区布局
  - 关系图谱 (Graph view) - 显示笔记之间的关联图
  - 幻灯片 (Slides) - 将笔记转换为演示文稿
  - 快速切换 (Quick switcher) - 快速搜索和打开笔记
  - 录音机 (Audio recorder) - 录制音频笔记

>[!tip] 上手即用
>AI学习助手1.01已经帮大家打开实用的核心插件，无需自己设置

**核心插件的详细设置区域**：
- **位置**：在设置页面的核心插件标签下方
- **内容**：展示所有已启用的核心插件的具体设置选项
- **功能**：可以对每个已启用的插件进行个性化配置
- **分类显示**：按插件类型分组显示，方便查找和调整

##### 4.1.2.1 白板
白板是一个无限大的平面，可以把你的笔记、PDF拖到里面，帮你构建关系图。

**创建白板的操作步骤**：
1. 在左侧插件栏中找到白板创建按钮（四个小方框的图标）
2. 点击该按钮即可创建新的白板
3. 系统会自动打开新的白板编辑界面
4. 可以在白板上自由放置文字、图片、笔记链接等元素
白板默认储存位置是`随笔·白板`文件夹。

##### 4.1.2.2 模板
模板插件可以帮你快速插入模板里面的文本。模板都储存在`Z-附件资料夹/模板`里面。
**使用模板的操作步骤**：
1. 在笔记中将光标定位到想要插入模板的位置
2. 在左侧插件栏中找到**插入模板**按钮
3. 点击按钮后会弹出模板选择菜单
4. 从可用模板列表中选择所需的模板
5. 模板内容会自动插入到当前光标位置
**模板插入成功后的显示效果**：
- 模板内容会直接显示在笔记中的指定位置
- 保持模板的原有格式和结构
- 可以在插入后继续编辑和修改内容
- 支持多个模板的组合使用

##### 4.1.2.3 文件恢复
**文件恢复功能使用步骤**：
Obsidian会即时储存你的修改，但如果想恢复文件到之前状态：
1. 在左侧插件栏中找到文件恢复按钮
2. 点击**文件恢复-浏览**按钮
3. 系统会打开文件恢复界面，显示可恢复的文件列表

**选择要恢复的文件**：
- **文件列表**：显示所有有历史版本的文件
- **文件信息**：包含文件名、修改时间等详细信息
- **选择操作**：点击想要恢复的文件名称
- **版本显示**：可以看到每个文件的历史版本数量

**选择具体的恢复时间点**：
- **时间列表**：显示选中文件的所有历史版本时间点
- **版本信息**：每个时间点显示具体的修改日期和时间
- **预览功能**：可以预览每个版本的内容差异
- **恢复操作**：点击所需的时间点即可恢复到该版本
- **安全提示**：恢复操作会覆盖当前版本，操作前需要确认

### 4.2 第三方插件
第三方插件是社区爱好者编写的功能，
**启用第三方插件的步骤**：
启用第三方插件，首先要**关闭安全模式**：
1. 进入设置页面，点击左侧菜单中的"第三方插件"
2. 在第三方插件页面顶部找到"安全模式"设置
3. 点击"关闭安全模式"按钮
4. 系统会提示安全风险，确认后即可关闭

**管理单个第三方插件**：
- **插件列表**：在第三方插件页面中显示所有已安装的第三方插件
- **开关按钮**：每个插件右侧有开关按钮，可以单独启用或禁用
- **插件信息**：包含插件名称、作者、版本号等详细信息
- **即时生效**：开关操作后立即生效，无需重启Obsidian

>[!tip] 开箱即用
>第三方插件中，除了copilot比较特殊，需要用户自行加载AI模型，其他都基本设置好了，开箱即用。

**第三方插件的详细设置区域**：
- **位置**：在设置页面左下方**第三方插件**区域下方
- **内容**：列出所有已启用的第三方插件及其设置选项
- **功能**：点击任意插件名称可进入该插件的具体配置页面
- **分类显示**：按插件类型和功能进行分组显示

>[!attention] 只有在**第三方插件**标签页中打开的插件才会显示到**设置页左下方**和**左边栏**里面：
**第三方插件打开状态的显示**：
- **启用标识**：已启用的插件在名称右侧显示绿色开关
- **禁用标识**：未启用的插件在名称右侧显示灰色开关
- **状态同步**：该页面的设置会直接影响左下方设置区和左侧插件栏的显示

下面是一些第三方插件功能简单介绍。

#### 4.2.1 Editing Toolbar 格式工具栏

**Editing Toolbar格式工具栏的功能特点**：
**Editing Toolbar**可以让用户像编辑word文档那样修改文字的格式。

**工具栏界面说明**：
- **位置**：位于编辑器顶部，紧邻文档标题栏
- **格式按钮**：包含粗体(B)、斜体(I)、删除线、高亮等常用格式
- **结构按钮**：支持插入标题、列表、表格、代码块等
- **快捷操作**：点击即用，无需记忆markdown语法

#### 4.2.2 Floating Toc 悬浮目录
**Floating Toc悬浮目录的显示效果**：
悬浮目录会自动读取当前文档的标题，在右边生成一个**大纲**的悬浮窗。

**悬浮目录界面特点**：
- **位置**：默认显示在编辑器右侧，可拖拽定位
- **层级结构**：按照标题级别（H1、H2、H3等）展示目录结构
- **快速导航**：点击目录项可快速跳转到对应段落
- **实时更新**：文档标题变化时自动更新目录

主要功能：
**1）展开收起大纲功能**：
- **操作方式**：点击浮动大纲右上角的小箭头按钮
- **收起状态**：点击后目录面板会折叠为小图标
- **节省空间**：收起后可以获得更大的编辑区域
- **快速展开**：再次点击可快速展开目录

**收起后的大纲显示效果**：
- **简化图标**：收起后只显示一个小的目录图标
- **位置固定**：保持在原有位置，不占用额外空间
- **功能保持**：虽然收起但功能仍可正常使用
- **视觉清洁**：减少视觉干扰，便于专注写作

**2）复制大纲功能**：
- **操作方式**：点击悬浮目录中的复制按钮
- **复制内容**：会复制当前文档的完整目录结构
- **格式保持**：复制的目录保持markdown格式，可直接粘贴使用
- **应用场景**：适用于制作文档索引或分享给他人

**替代方式打开大纲**：
关掉floating toc后，如需打开大纲：
1. 点击界面右上角的**右边栏**按钮
2. 在右边栏中找到并点击**大纲**按钮
3. 大纲面板会在右侧边栏中打开
4. 此方式打开的大纲与Floating Toc功能相同，但位置固定

#### 4.2.3 Minimal Theme Settings 极简外观设定
**Minimal Theme Settings启用后的效果**：
该插件是Obsidian的极简外观**改变字体颜色**的插件，打开之后，文档的**不同级别标题会自动变色**，方便阅读。

**启用后的标题颜色效果**：
- **一级标题(H1)**：显示为鲜明的蓝色
- **二级标题(H2)**：显示为深绿色
- **三级标题(H3)**：显示为橙色
- **四级及以下标题**：使用不同深浅的颜色区分
- **层次清晰**：不同级别的标题一目了然，便于快速定位

**关闭后的显示效果**：
关闭Minimal Theme Setting后，所有标题恢复为默认颜色：
- **统一颜色**：所有标题显示为相同的白色或主题默认颜色
- **层次不明**：难以快速区分不同级别的标题
- **阅读体验**：相比开启时的彩色效果，阅读体验有所下降

>[!attention] 注意：这个插件只对Minimal外观有作用。更换成其他外观，插件会失效。

#### 4.2.4 Excalidraw 手绘板
**Excalidraw手绘板的使用方式**：
Excalidraw是一款**白板绘图工具**，支持手绘板笔记等功能，有手绘板且喜欢手写笔记的朋友可以使用。

**启动方式**：
1. 在左侧插件栏中找到**钢笔**图标按钮
2. 点击按钮即可启动Excalidraw绘图界面

**主要功能**：
- **自由绘图**：支持手绘、线条、形状、文字等元素
- **手写支持**：特别适合使用手写板或触控笔
- **无限画布**：提供无限大小的绘图区域
- **实时协作**：支持多人实时协作编辑

>[!tip] 配合手写板，体验更佳。

#### 4.2.5 Media Extended 多媒体浏览
**Media Extended多媒体浏览功能**：
Media Extended插件可以直接**用Obsidian浏览**网络或本地的**视频**。

**使用步骤**：
1. 在左侧插件栏中找到播放按钮（三角形图标）
2. 点击按钮后会弹出输入框
3. 在输入框中粘贴视频链接（支持B站、YouTube等平台）
4. 确认后即可在Obsidian内播放视频

**支持的平台**：
- **B站**：支持哔哩哔哩视频直接播放
- **YouTube**：支持YouTube视频嵌入
- **本地文件**：支持本地MP4、MOV等格式

**视频内嵌播放效果**：
- **无缝集成**：视频直接嵌入到Obsidian编辑器中
- **播放控制**：支持暂停、播放、音量调节等基本操作
- **笔记结合**：可以在视频下方直接做笔记，实现学习和记录的统一
- **时间戳记**：可以记录特定时间点，方便后续复习

#### 4.2.6 PDF ++ 
PDF++插件可以帮助给PDF文件写笔记，提升阅读体验。
打开一个PDF文件后，PDF ++ 的主要功能集中在上方**工具栏**和**鼠标右键**选项：

**PDF++工具栏界面说明**：
- **位置**：PDF文件上方的工具栏区域
- **主要功能按钮**：从左到右依次为
  - **Selection工具**：用于选择PDF文本内容
  - **Note工具**：添加注释功能
  - **Highlight工具**：高亮标记功能
  - **Copy工具**：复制选中内容
  - **Translate工具**：翻译选中文本
- **右键菜单**：在PDF文本上右键可显示快捷操作菜单
- **功能特色**：工具栏提供了完整的PDF阅读和笔记功能，支持文本选择、复制、翻译等操作

使用方法：打开PDF书籍和对应的笔记，选中要翻译、关键点、灵感或者其他段落，选择你要粘贴的方法，我这里选择了复制原文和页码：

**PDF++复制操作界面说明**：
- **操作步骤**：
  1. 在PDF中选中需要复制的文本段落
  2. 右键点击选中的文本
  3. 在弹出的右键菜单中选择复制选项
- **复制选项**：
  - **Copy Text**：仅复制选中的文本内容
  - **Copy Text + Page**：复制文本内容并附带页码信息
  - **Copy as Quote**：以引用格式复制文本
- **界面特点**：右键菜单会显示在选中文本附近，提供多种复制格式选择
- **推荐设置**：建议选择"Copy Text + Page"以便保留页码引用信息

点击page，这段话就会被粘贴到对应的笔记中，并附带生成页码的链接，点击页码可以直接打开对应书籍的指定页：

**PDF++粘贴结果界面说明**：
- **粘贴内容格式**：
  - **文本内容**：选中的PDF原文内容
  - **页码链接**：格式为"[页码]"的可点击链接
  - **完整格式**："原文内容 [页码]"
- **链接功能**：
  - 点击页码链接可直接跳转到PDF对应页面
  - 链接保持与原PDF文件的关联
  - 支持快速定位和回溯
- **显示效果**：
  - 文本内容以普通格式显示
  - 页码以蓝色超链接形式显示
  - 整体保持良好的阅读体验
- **应用场景**：适合做读书笔记、文献摘录、学术引用等

#### 4.2.7 Commander 添加命令
**Commander插件的作用和示例**：
Commander插件可以将常用的命令创建为快捷按钮，提高操作效率。

**示例功能说明**：
- **按钮位置**：位于界面右上角的工具栏中
- **命令内容**：**PDF++: create new note for auto-focus or auto-paste**
- **具体功能**：当阅读PDF书籍时，一键在`随笔·白板`文件夹中创建与当前PDF相关联的笔记文件

**Commander插件的优势**：
- **自定义按钮**：可以将任意命令添加为界面按钮
- **快速访问**：无需记忆快捷键或命令名称
- **个性化配置**：根据个人使用习惯定制工具栏
- **提高效率**：将复杂操作简化为一键操作

## 5 AI学习助手使用指南（基础版）

### 5.1 copilot插件介绍

> [!note] 
> AI学习助手的AI部分，主要通过Obsidian软件里面的第三方插件**copilot**实现。copilot的主要功能有：1）支持多种AI模型； 2）搜索仓库里面笔记，通过"Vault QA"功能整合分散内容，快速生成总结或回答复杂问题； 3）提供一键翻译、润色、生成表格等功能，用户可自定义常用指令模板（如"专业润色"），并储存快速调用，提升操作效率。
> 
> 视频参考：[【录播剪辑】AI学习助手1.0-原理及概念介绍_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1R6L8zhEuf/?spm_id_from=333.337.search-card.all.click&vd_source=9de7c3a67fd42814f6579e0482d4d3ad)

插件已经安装好了，我们需要加载模型。我们在设置里面打开**copilot**，点击copilot页面中的**model**标签。

**Copilot模型配置页面结构**：
- **页面位置**：设置 → 第三方插件 → Copilot → Model标签页
- **主要区域**：
  - **Chat Model区域**：用于配置对话模型，包含模型列表和添加按钮
  - **Embedding Model区域**：用于配置嵌入模型，包含模型列表和添加按钮
  - **配置按钮**：每个区域都有"Add Custom Model"按钮用于添加新模型
- **功能说明**：此页面是AI学习助手的核心配置区域，需要配置两种不同类型的模型才能正常使用

AI学习助手的正常使用需要配置两种模型，**对话模型（Chat Model)**和**嵌入模型（Embedding Model）**。上述两种模型的具体功能，请参考：[[#5.2 AI基本问答流程]]。

加载的模型可以用网上运营商提供的api，也可以用下载到本地的。考虑到大部分朋友电脑配置不好，**本使用手册采用网上运营商API完成模型加载**。

> [!note] 使用网络运营商的优缺点
> 优点：1、对电脑硬件要求低；2、运算速度快
缺点：1、收费，deepseek R1每个问题需要4分钱左右；2、隐私安全问题，嵌入模型会搜索AI学习助手仓库里面的所有文件，包括所有的笔记、心得。

若要使用本地模型，推荐使用LM Studio下载和管理本地模型的使用和加载，详细请参考：[[#6.1 LM Studio]]

#### 5.1.1 添加Chat Model
**添加Chat Model的操作步骤**：
1. 在Copilot设置页面的Model标签页中找到"Chat Model"区域
2. 点击该区域下方的"Add Custom Model"按钮
3. 系统会弹出自定义模型配置对话框

弹出的模型配置窗口包含以下配置项：

**添加自定义聊天模型配置界面**包含以下字段：
- **Model Name***（必填）：输入模型名称，例如 gpt-4
- **Display Name**（可选）：自定义显示名称，用于在界面中显示
- **Provider**：选择提供商类型，默认为 OpenAI
- **Base URL**：API接口地址，如 https://api.openai.com
- **API Key**：输入OpenAI API密钥，可点击"Get OpenAI API Key"获取
- **Model Capabilities**（模型能力）：
  - ☐ Reasoning（推理能力）
  - ☐ Vision（视觉能力）  
  - ☐ Websearch（网络搜索）
- **Additional OpenAI Settings**：额外的OpenAI设置选项
- **☐ Enable CORS**：启用跨域资源共享
- 底部有 **Add Model** 和 **Verify** 按钮用于添加和验证模型

配置以硅基流动API为例，请参考：[[#6.2 硅基流动]]

**模型名称配置**：
- **获取方式**：在硅基流动的模型广场中选择所需模型
- **复制操作**：点击模型名称右侧的复制按钮
- **名称示例**：deepseek-AI/DeepSeek-R1
- **注意事项**：必须复制完整的模型名称，包括组织名和模型名

展示名（**Display Name**）：向用户展示的名字，可自行设置，例如Siliconflow_deepseek-AI/DeepSeek-R1

**Provider提供商选择**：
- **选择原则**：根据模型提供商的API接口格式选择
- **常用选项**：
  - OpenAI Format：适用于兼容OpenAI API的提供商（如硅基流动）
  - Anthropic：适用于Claude系列模型
  - Google：适用于Gemini系列模型
- **推荐设置**：对于硅基流动等兼容平台，选择“OpenAI Format”

**Base URL基础地址配置**：
- **作用**：API请求的基础地址，指向模型提供商的服务器
- **硅基流动示例**：https://api.siliconflow.cn/v1
- **其他常用地址**：
  - OpenAI官方：https://api.openai.com/v1
  - 本地部署：http://localhost:1234/v1
- **注意事项**：必须以“/v1”结尾，且保证网络可访问

**API Key密钥获取和配置**：
- **作用**：用于身份验证的密钥，确保只有授权用户可以使用API
- **获取步骤**：
  1. 在模型提供商官网注册账号
  2. 进入API管理页面
  3. 点击"新建密钥"或"Create API Key"
  4. 设置密钥名称和权限
  5. 复制生成的密钥（仅显示一次）

**API密钥的复制和粘贴操作**：
1. **复制操作**：
   - 在模型提供商页面中找到新创建的API密钥
   - 点击密钥旁边的"复制"按钮
   - 系统会自动将密钥复制到剪切板
2. **粘贴操作**：
   - 返回Obsidian的模型配置窗口
   - 在"API Key"输入框中粘贴密钥
   - 确保密钥完整且格式正确

接下来，勾选**Reasoning**和**Enable CORS**两个选项。
>[!note]
Reasoning是表示添加的模型具有推理能力，即具有文字问答的能力。CORS是允许跨域资源共享（Cross-Origin Resource Sharing），即允许外部API访问。

**模型能力勾选界面说明**：
- **Reasoning选项**：
  - **位置**：在"Model Capabilities"区域内
  - **状态**：需要勾选（✓）
  - **作用**：启用模型的推理和文字问答能力
- **Enable CORS选项**：
  - **位置**：在"Additional OpenAI Settings"区域内
  - **状态**：需要勾选（✓）
  - **作用**：允许跨域资源共享，确保API正常访问
- **界面布局**：
  - 选项以复选框形式呈现
  - 勾选后会显示蓝色对勾标记
  - 两个选项都是必需的配置项
- **注意事项**：这两个选项都必须勾选，否则模型可能无法正常工作

完成上面，点击verify验证：

**验证按钮操作说明**：
- **按钮位置**：在模型配置对话框的底部区域
- **按钮样式**：通常为蓝色背景的"Verify"按钮
- **按钮功能**：验证模型配置的正确性和API连接状态
- **点击操作**：
  1. 确保所有必填信息已正确填写
  2. 点击"Verify"按钮
  3. 系统会测试API连接和模型响应
- **验证过程**：系统会发送测试请求到指定的API地址，检查模型是否可用
- **重要提醒**：验证成功后才能继续添加模型，验证失败需要检查配置信息

验证成功的话，Obsidian右上角会弹出Model verification successful（模型验证成功）字样：

**验证成功消息界面说明**：
- **消息位置**：Obsidian界面右上角
- **消息样式**：绿色背景的通知框
- **消息内容**："Model verification successful"或"模型验证成功"
- **显示时间**：通知会自动显示几秒钟后消失
- **成功标识**：
  - 绿色背景表示操作成功
  - 可能包含绿色对勾图标
  - 文字为白色或深色以保证可读性
- **后续操作**：看到此消息后即可点击"Add Model"按钮添加模型
- **失败情况**：如果验证失败，会显示红色错误消息，需要检查配置信息

然后再点击Add Model添加模型：

**添加模型按钮操作说明**：
- **按钮位置**：在模型配置对话框底部，通常位于"Verify"按钮旁边
- **按钮样式**：蓝色背景的"Add Model"按钮
- **按钮状态**：
  - 验证成功前：可能为灰色不可点击状态
  - 验证成功后：变为可点击的蓝色按钮
- **点击操作**：
  1. 确保已完成验证且验证成功
  2. 点击"Add Model"按钮
  3. 系统会将模型添加到Chat Model列表中
- **添加结果**：模型会出现在对应的模型列表中，可以进行进一步的配置和启用操作

模型就添加到Chat Model列表中，若要激活该模型需要勾选Enable和CORS选项：

**模型启用选项界面说明**：
- **界面位置**：在Chat Model列表中，每个已添加的模型都会显示配置选项
- **Enable选项**：
  - **位置**：模型名称下方的第一个复选框
  - **作用**：启用该模型，使其可以在Copilot中使用
  - **状态**：需要勾选（✓）才能激活模型
- **CORS选项**：
  - **位置**：Enable选项旁边的复选框
  - **作用**：启用跨域资源共享，确保API正常访问
  - **状态**：需要勾选（✓）
- **界面布局**：
  - 每个模型显示为一个独立的配置块
  - 包含模型名称、显示名称和配置选项
  - 勾选状态以蓝色对勾显示
- **注意事项**：只有同时勾选Enable和CORS，模型才能正常工作

添加好了对话模型后，可以配置模型参数，通常保持默认即可。

**模型参数配置界面说明**：
- **界面位置**：在已启用的模型配置区域下方
- **主要参数**：
  - **Temperature（温度）**：
    - 滑块控制，范围通常为0.0-2.0
    - 默认值约为0.7-1.0
    - 数值显示在滑块右侧
  - **Token Limit（令牌限制）**：
    - 数字输入框或滑块控制
    - 显示最大输出字数限制
    - 默认值根据模型而定
  - **Conversation turns in context（对话轮次）**：
    - 数字输入框，通常默认为15
    - 控制模型记住的对话历史数量
- **界面布局**：
  - 参数以标签+控件的形式排列
  - 每个参数都有清晰的说明文字
  - 实时显示当前设置值
- **推荐设置**：初学者建议保持默认值，有经验后可根据需要调整

>[!note]
>**Temperature**指的是模型的温度，温度越高，模型创造力越强，缺点是容易瞎编。反之，模型越严谨，缺点是发散性较弱。
>**Token Limit**指的是模型每次回答的最大字数。
>**Conversation turns in context**指的是模型会记住多少前面的问答。15 turns就是15个用户提问和15个模型回答。

#### 5.1.2 添加Embedding Model
除了Chat Model，还需要添加Embedding Model嵌入模型。

>[!note]
嵌入模型的主要功能是搜索仓库里面的文本，把同跟提问相关文本提交给对话模型。深入了解嵌入模型，请参考： [[#5.2 AI基本问答流程]]
如果注重隐私，可以加载本地嵌入模型，如需使用LM Studio软件，请参考： [[#6.1 LM Studio]]]

添加Embedding Model的方法与添加Chat Model基本一致，只是模型功能不同。同样以硅基流动为例：

1. 点击展开筛选器，在搜索框中输入"嵌入模型"进行搜索
2. 在搜索结果中推荐选择第一个：**BAAI/bge-large-zh-v1.5**（中文嵌入模型）

之后的步骤基本一致，不在赘述。由于Embedding Model不具备Reasoning等功能，因此在配置选项中只需要勾选`Enable CORS`选项即可。

添加后，在模型列表中可以看到新增的嵌入模型，确认CORS选项已勾选。

#### 5.1.3 Basic标签页设置

模型加载完成后，在Basic标签页选择刚刚加载完成的两种模型：
- **Chat Model**：选择之前添加的对话模型
- **Embedding Model**：选择刚刚添加的嵌入模型

选择Embedding Model后，系统会弹出重建检索库的弹窗，点击`Continue`按钮继续。

检索库建立成功后，Obsidian右上角会显示**Index completed successfully!**的成功提示。

**这个步骤相当于Embedding Model把学习助手仓库里的所有文本（PDF除外）贴了标签，后续就可以通过标签和提问的相似度向对话模型提供相关文本。**

>[!tip] 快速使用
>**打开AI对话框**：点击左边栏或右边栏的`Open Copilot Chat`按钮
>
>**索引新笔记**：每次有新笔记或笔记更新时，点击对话框右上方的`Reindex Current Note`按钮，为这篇笔记建立索引
>
>**相关笔记推荐**：AI助手会在`Relevant Notes`（相关笔记）栏自动推荐仓库中可能相关的文件，按相似度排序
>
>**查看相关度**：点击笔记条目左侧的小按钮，可以查看嵌入模型估算的相关度分数
>
>**添加到对话**：点击`Add to Chat`按钮，将选中的笔记添加到对话框中作为上下文
>
>**选择对话模式**：在提问框左上角可以选择：
>- `Chat`模式：单纯使用对话模型
>- `Vault QA`模式：结合嵌入模型搜索仓库内容
>
>**模型选择**：可以在对话过程中切换不同的对话模型
>
>**对话保存**：对话会自动保存到`AI对话自动存档`文件夹

#### 5.1.4 其他设置
`Default Mode`：AI聊天的默认对话模式。参数示例：Chat（对话模式） / Vault QA（仓库检索模式）

`Open Plugin In`：用侧边栏或者用编辑器打开AI聊天对话框

`Default Conversation Folder Name`：AI对话存档的文件夹，默认文件夹是`AI对话自动存档`

`Custom Prompts Folder Name`：保存提示词prompts的路径。默认文件夹是`AI快捷指令`

>[!tip] 提示词就是用户向AI的提问。
>有一些提问技巧，可以提升AI回答的准确性。
>一些重复好用的提示词可以保存到`AI快捷指令`文件夹里，方便复用。

`Default Conversation Tag`：保存AI对话的默认标题。默认值：AI-conversations

`Conversation Filename Template`：保存的AI问答文件的开头格式。默认格式：话题-日期-时间

`Autosave Chat`：聊天记录自动储存，打开的话每次新建对话都会自动储存之前的话题。

`New Chat`按钮：位于Copilot聊天界面的顶部，点击后会开启新的对话会话，之前的对话内容会根据自动保存设置进行储存。

`Suggested Prompts`：是否显示copilot推荐的提示词。

`Relevant Notes`：是否显示相关笔记。

#### 5.1.5 QA标签页设置
QA标签页是帮助设置嵌入模型搜索本地文件的。这一页比较重要。

`Max Sources`：最大文本数。这个数字决定嵌入模型会把几段相关文本投喂给对话模型。

`Requests per Minute`：每分钟请求数。决定每分钟向AI服务商发送的最大请求次数

`Embedding Batch Size`：一次性发送给嵌入模型处理的文本块数量。数量越大，单次处理的文本块越多，整体处理速度越快，增加显存、内存占用（如果你的嵌入模型放在本地）

`Number of Partitions`
Number of partitions for Copilot index. Default is 1. Increase if you have issues indexing large vaults. Warning: Changes require clearing and rebuilding the index!

`Exclusions`：嵌入模型不可访问的文件夹。

`Inclusions`：嵌入模型可访问的文件夹。

`Enable Obsidian Sync for Copilot index`：如果打开，索引文件（相当于图书馆标签系统）文件会储存在 .obsidian 文件夹中。这个隐藏文件夹包含了Obsidian的所有配置文件和插件数据，其中索引文件用于快速检索和关联笔记内容。

`Disable index loading on mobile`：打开此项，索引文件会同步到手机Obsidian上

#### 5.1.6 Command标签页设置
Command标签页管理右键快捷AI指令，这些指令可以通过选中文本后右键菜单快速调用。默认提供了多个常用的文本处理指令，用户也可以自定义新的指令。

选择文字-点击鼠标右键，点击你想要的指令：
|Fix grammar and spelling||| 改语法拼写错误
||Translate to Chinese||| 翻译成中文
||Summarize||| 总结
||Simplify||| 简化
||Emojify||| 转换成emoji
||Make shorter||| 缩短
||Make longer| 扩写

使用示例：选中需要修改的文本，右键选择"Fix grammar and spelling"指令，AI会自动检查并修正语法和拼写错误，处理结果会直接替换原文本。

##### 自定义指令配置

这些指令可以自行修改和编写。要编辑现有指令，请：
1. 打开Copilot设置的Command标签页
2. 点击指令名称（如"Fix grammar and spelling"）旁边的编辑按钮
3. 在弹出的编辑窗口中修改指令内容

指令格式包含以下要素：
- **Name**: 指令名称，显示在右键菜单中
- **Prompt**: AI处理时使用的提示词
- **Show in**: 指令显示的位置（右键菜单、命令面板等）

##### 添加新指令

要添加新的自定义指令：
1. 在Command标签页点击"Add Command"按钮
2. 填写指令配置信息：
   - **Name**: 输入指令名称
   - **Prompt**: 输入AI处理指令的提示词
   - **Show in**: 选择指令显示位置
3. 点击保存完成添加

指令的提示词应该清楚地描述要求AI执行的任务，可以使用占位符来引用选中的文本内容。

新指令添加后，即可在右键菜单中使用。选中文本后右键，选择自定义的指令名称，AI会按照设定的提示词处理选中的内容。

#### 5.1.7 Advanced设置

`User System Prompt`：添加到所有用户提问中的系统提示词，用于设定AI的角色、回答风格或特定要求。

##### 系统提示词设置

系统提示词功能允许您：
- 设定AI的角色人设（如专业导师、学习伙伴等）
- 定义回答的格式和风格要求
- 引用AI快捷指令中的预设模板
- 使用[[双链]]语法关联现有的提示词模板

设置后，每次与AI对话时都会自动包含这些系统提示词，确保AI按照您的预期方式回答问题。

**重建索引功能**：当修改了笔记内容或添加新的关联后，点击"重建索引"按钮可以更新知识库的关联关系，确保AI能够准确检索到最新的相关内容。

### 5.2 AI基本问答流程

本节内容主要通过流程图帮助用户了解从提问，到获得AI回答，中间发生的具体过程。
第一个流程图显示的是deepseek R1的流程。
第二个流程图显示的是AI学习助手增强了哪些部分。

>[!note] 对话模型和嵌入模型
>**对话模型**（Chat Model）就是大语言型（LLM，large language model）也叫推理模型（Reasoning Model），解码模型（Decoder Model）。它的主要功能是分析**用户文字提问，生成文字答案。**一般来说，对话模型参数越多，对话能力越强。Deepseek R1满血版有6710亿个参数，要1300多G的显存才能加载完成。
>**嵌入模型**（Embedding Model）是一个编码模型（Encoder model），其主要作用是将文本向量化，从而可以计算文本之间的相似度等。嵌入模型一般只有100-300M大小，非常适合下载到本地使用。
>本地下载使用AI模型，请参考[[#6.1 LM Studio]]部分。

#### 5.2.1 deepseek R1工作流程
使用大语言模型时，如deepseek R1，用户和AI的问答流程如下：
```mermaid
%%{init: {"theme": "default", "themeVariables": { "fontSize": "14px"}}}%%
flowchart TD
    A[用户提问] --> C{对话模型<br>Chat Model}
    B[过往对话] --> C
    C -->|深度思考| D[改写提问<br>Rewritten Querry]
    A --> H{对话模型<br>Chat Model}
    B --> H
    D --> H
    H --> I[生成答案]
```
上图可以看到，用户提问和过往对话会输入给对话模型（也就是大语言模型），生成一个改写过的问题。这个改写问题就是R1**深度思考**产生的提示词或背景描述。然后，**原来提问、过往对话、和改写提问三部分**会再次输入给对话模型，最后生成回答。

#### 5.2.2 学习助手增强问答流程
大语言模型有几个缺点：第一，容易产生幻觉，也就是生成虚假数据或者细节；第二，信息可能过时；第三，容易忘记用户持续统一的要求（比如希望AI扮演某角色）。通过检索增强生成（Retrival-augmented Generation或RAG）的技术，可以有有效的减少大语言模型的幻觉问题，该技术流程如下：
```mermaid
%%{init: {"theme": "default", "themeVariables": { "fontSize": "14px", "nodeWidth": "30px" }}}%%
flowchart TD
    A[用户提问<br>Query] --> C{对话模型<br>Chat Model}
    B[过往对话] --> C
    C -->|深度思考| D[改写提问<br>Rewritten Querry]
    D --> E{嵌入模型<br>Embedding Model}
    E -->|搜索仓库| F[相关文本块]
    A --> H{对话模型<br>Chat Model}
    B --> H
    D --> H
    F --> H
    G[系统提示词<br>System Prompt] --> H
    H --> I[生成答案]
```
相对于一般问答，增强问答还包含了两部分内容，第一，用户可以写一个**系统提示词**，该提示词每次提问都会自动添加到问题中，不断提醒AI。第二，可以使用**嵌入模型**（Embedding Model），辅助搜索**搜索本地仓库**，把跟提问**相关的文本**找出来，当作提问的一部分输入对话模型。

>[!note] 嵌入模型如何查找相关文本块？
>**​一、预处理阶段​​**（Rebuild Index)
​​**分块**​​
>将笔记内容切割为多个文本块（Chunks），便于后续处理。
​​**向量化**​​
>用嵌入模型将每个文本块转换为语义向量，捕捉文本含义。
>**​​存储**​​
所有语义向量存入数据库，按语义关联性分类存储。
​​
**二、检索阶段​​**
​​**提问转换**​​
>将用户提问转化为语义向量，与数据库向量统一维度。
 >**语义匹配**​​
> 从数据库中快速筛选与提问向量最相似的文本块。
>**​​生成答案**​​
>将匹配的文本块作为上下文，输入大模型生成最终回答。

# 第二部分：新增功能

## **零、版本情况**
### **新版功能特性**
- **AI学习助手界面** - 提供直观的操作界面，一键管理Obsidian软件和语音功能。
- **Obsidian插件语音功能** - 在Obsidian Copilot插件中新增语音功能，包括录音转文字、音视频转文字，以及文字转语音，支持自动播放和更自然的对话方式，模拟真实交流。
- **更多AI学习角色** - 提供多样化的AI学习助手角色，并支持问题延伸功能，AI会主动提出相关学习问题，帮助用户深入学习。
- **语音功能优化** -** 为CUDA用户升级至更高品质的TTS模型，生成音色更生动自然，支持音色克隆功能。语音服务可根据用户设备性能自动适配最优模型，确保流畅体验。

### **基础功能特性**
- 通过自定义标签设计，实现定制不同的AI人设，满足对话需求
- 支持引用不同文档内的多段文本内容与AI进行交互
- 支持对本地音视频进行语音识别，并可在windows上通过CPU/CUDA上一键部署
- 支持对选中文本进行文字转语音，并可在windows上通过CPU/CUDA上一键部署


## **一、启动器使用**
### **1.1 启动器解压与启动**
首先，下载学习助手软件包“AI-Learning-Assistant-V1.2.0-Launcher-win32-x64-1.0.0.zip”，并解压到指定文件夹(解压路径尽量选择英文路径)，点击其中的学习助手图标的程序启动：

Windows文件管理器界面，显示AI-Learning-Assistant-V1.2.0-Launcher-win32-x64-1.0.0文件夹的内容，其中包含多个文件夹和文件，红色框标出了名为AI-Learning-Assistant-Launcher.exe的学习助手启动程序图标
点击后会启动学习助手界面，目前主要有两块内容，分别是：

1. 学习助手阅读器：用于对obsidian阅读器进行管理，支持多仓库管理、开发插件本地一键更新，后续版本会在其中逐步支持学习资料管理、AI人设管理等内容(暂未支持，敬请期待~)
1. 学习助手工具箱：用于集成管理与使用各种AI工具，目前支持文字转语音(TTS)与语音转文字(ASR)一键部署，后续版本会在其中逐步支持AI跑团、本地语言模型部署、AI绘图等工具(暂未支持，敬请期待~)

### **1.2 学习助手阅读器使用说明**
在学习助手阅读器界面，如果未安装obsidian软件，请点击“安装阅读器”按钮进行安装，会跳出obsidian软件安装程序，请按照指示完成安装。

AI学习助手启动器界面，显示仓库管理页面，包含三个仓库配置：仓库AI学习助手1.0、仓库test_plugin和插件基础信息。右侧有更新仓库和定位阅读器按钮，红色框标出了「安装阅读器」按钮
安装好obsidian软件后，则需要点击“定位阅读器”，点击后会跳出一个选择文件框，用于选择obsidian软件运行程序。

AI学习助手启动器界面，与上一张图片类似，但右侧按钮状态有所不同，红色框标出了「定位阅读器」按钮
Windows系统文件选择对话框，标题为「打开」，显示用户文档文件夹的内容，包含多个文件夹如三次元、益、OneDrive等，底部有文件名输入框和打开、取消按钮


我们可以通过已下方法得知obsidian软件运行程序的具体地址，通过windows搜索栏按照序号顺序输入与点击内容，最后复制此软件的绝对路径，粘贴至定位阅读器的选择框中，最后点击“打开”确认：

Windows开始菜单搜索结果界面，显示搜索「Obsidian」的结果。左侧显示最佳匹配中的Obsidian应用，右键菜单已展开，显示多个选项包括「打开文件位置」等操作，图片标注了操作步骤序号1、2、3
Windows文件管理器界面，显示Program Files文件夹内容，地址栏显示完整路径，红色框标出了程序文件的路径信息，包含多个应用程序文件夹
Windows文件管理器界面，显示程序文件列表，包含多个应用程序如Cherry Studio、Field Helper、IM Studio等，底部文件名输入框中显示「Obsidian」，红色框标出了打开按钮
确定好obsidian位置后，点击需要使用的obsidian仓库的“插件情况”进行插件更新，目前支持对二次开发插件进行更新：

AI学习助手启动器的插件管理界面，显示多个插件列表包括Advanced Canvas、Aloud TTS、Commander、Copilot等，每个插件都有对应的版本号和安装按钮
安装好指定插件后，请在obsidian的插件管理页面启动这两个插件：

Obsidian插件管理界面，左侧显示设置菜单，中间显示已安装插件列表，包括Advanced Canvas、Aloud TTS、Commander、Copilot等插件，每个插件右侧都有开关按钮用于启用或禁用，红色框标出了Aloud TTS和Copilot两个插件
若你先前安装了原版的aloud/copilot插件，由于插件兼容冲突的原因，需要首先关闭原先插件，再启动新版插件，才能正常使用。

相关新版obsidian插件新功能的使用说明请跳转至“第二部分”。

### **1.3 学习助手工具箱使用说明**
工具箱主要提供各种AI增强服务功能，当前版本支持语音转文字、文字转语音功能，后续功能会逐步添加其他功能。
#### **1.3.1 服务初始化**
首先使用工具箱相关功能，需要在Windows上启动WSL功能,请点击按钮进行启动：

AI学习助手工具箱界面，显示两个主要功能模块：试用者写版音转文字和试用者项版文字转语音，右侧都有对应的访问地址输入框和安装、更新按钮，顶部有蓝色提示框显示「为配合虚拟助手服务的机修启动Windows音频相关WSL引擎」
启动后需要安装一些程序，安装好后会提示需要重新启动电脑：

AI学习助手工具箱界面，显示安装完成后的状态，红色框标出了提示信息「已经完成WSL环境的基础组件的安装，需要重新启动计算机继续安装，请重新启动开机7天后开闭步骤即可继续使用环境」
重新启动好后，接下来开始正常开始使用相关功能了。


#### **1.3.2 语音服务使用**
对于TTS/ASR功能，我们提供了"AI-Learning-Assistant-V1.2.0-Voice-v1.1.tar"安装包，其点击其中一个功能的安装按钮，选中指定tar包进行导入与安装，初始安装可能需要耗费比较长的时间(10分钟左右)，请耐心等待：

AI学习助手工具箱界面，显示重启后的状态，两个功能模块的访问地址都已配置好（http://127.0.0.1:9000和http://127.0.0.1:8000），右侧显示安装和启动按钮


Windows文件选择对话框，标题为「导入算法服务包(AI语音服务安装包)」，显示文件夹内容，底部红色框标出了文件名输入框中的「AI-Learning-Assistant-V1.2.0-Voice-v1.1.tar」文件名，右侧有打开和取消按钮
AI学习助手工具箱界面，显示语音转文字和语音转文字转译功能的配置界面。界面顶部显示"请用官方提供的安装包"的提示。左侧显示"语音转文字"和"语音转文字转译"两个功能选项。右侧显示服务配置区域，包含"API地址"输入框（填写http://127.0.0.1:9000）和"更新"按钮，该按钮以红色框突出显示。


##### **1.3.2.1 语音转文字**
**基础使用：**

安装完毕后，请点击“启动”，可以在设置页面查看启动情况，当看到最终提示9000端口的相关信息时，可知服务启动成功。接着，我们可在“2.3”部分配置obsidian插件相关参数(注意，请使用本地地址的 URL进行配置，例如 '[http://127.0.0.1:9000](http://127.0.0.1:9000/)'。如果使用全局地址 '[http://0.0.0.0:9000](http://0.0.0.0:9000/)'，由于相关网络参数未正确配置，可能无法正常使用服务。)来使用ASR服务。

AI学习助手工具箱界面，显示语音转文字和语音转文字转译两个服务模块的状态。界面顶部有红色提示"请用官方提供的安装包"。左侧列表显示可用服务，右侧显示每个服务的详细配置，包括"API地址"（填写为http://127.0.0.1:9000）、"更新"、"重载"等按钮，以及"启动"和"设置"按钮。
AI学习助手工具箱服务启动状态窗口，显示语音服务的启动日志信息。窗口顶部显示服务名称，中间区域显示详细的启动日志，包含多行技术日志信息，如"[INFO] Starting for application startup"等系统启动信息。底部有红色框标出的启动成功提示信息"[INFO] Uvicorn running on http://0.0.0.0:9000 (Press CTRL+C to quit)"，表示服务已在9000端口成功启动。
注意：

1. 请在不需要使用时即时关闭相关服务，以免内存/显存占用

##### **1.3.2.2 文字转语音**
**基础使用：**

安装完毕后，请点击“启动”，可以在设置页面查看启动情况，当看到最终提示8000端口的相关信息时，可知服务启动成功。接着，我们可在“2.2”部分配置obsidian插件相关参数(注意，请使用本地地址的 URL进行配置，例如 '[http://127.0.0.1:8000](http://127.0.0.1:9000/)'。如果使用全局地址 '[http://0.0.0.0:8000](http://0.0.0.0:9000/)'，由于相关网络参数未正确配置，可能无法正常使用服务。)来使用TTS服务。

AI学习助手工具箱界面，显示文字转语音服务的配置。界面顶部有红色提示"请用官方提供的安装包"。左侧列表显示"语音转文字"和"语音转文字转译"选项，右侧显示文字转语音服务的配置区域，包含"API地址"字段（显示http://127.0.0.1:8000）、"更新"按钮，以及"启动"按钮（以红色框突出显示）。

AI学习助手工具箱显示三个语音服务配置卡片：语音3、语音4和语音3。每个卡片都包含相同的配置选项，包括"名称"、"音色描述"、"文件"、"文件名（text）"、"语言（language）"设置为"Chinese"。底部显示详细的服务启动日志，红色框标出了Uvicorn服务成功启动的信息"[INFO] Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)"，表明文字转语音服务已在8000端口启动。


另外要注意的是，在设置中我们可以强制指定N卡或cpu的运行条件，这样的区别是强制N卡使用index-tts模型，而强制cpu使用kokoro模型。而在默认不强制情况下，程序会根据当前设备的硬件状况运行指定模型(若无N卡以及cuda驱动，则运行kokoro模型；若有则默认运行index-tts模型)

AI学习助手工具箱的TTS模型选择界面。界面顶部显示红色提示框"TTS模型选择"，说明"语音模型选择：默认情况下，将根据硬件配置自动选择最适合的语音模型，也可以手动选择下列模型"。下方显示"强制使用N卡"和"强制使用cpu"两个选项。底部是"音色配置管理"区域，显示三个音色配置卡片（音色4、音色3、音色2），每个卡片包含音色名称、配置描述和语言设置，最右侧有"Add Preset"和"CPU检测"按钮。


这里展示下当前可用的文本转语音模型总体情况：

|模型|运行速度|语音质量|
| - | - | - |
|kokoro(A卡或cpu默认运行)|cpu/gpu可用，运行速度快|中规中矩，发挥稳定，语气清晰感偏弱|
|index-tts(N卡默认运行)|gpu速度较快，cpu非常慢，不建议在只有cpu上使用该模型|语音质量较高，发声自然，带一定的情绪，且支持音色克隆|


**音色克隆：**

以下介绍音色克隆的方法：点击“添加语音”，选择一段比较干净无噪声的说话人音频文件(7s~20s即可)，确认后会在语音配置管理界面出现一个新增卡片：

语音配置管理界面显示三个音色配置卡片。每个卡片包含详细的音色配置信息：音色名称、音色描述、文件路径、文件名、语言设置等字段。右下角有红色框突出显示的"添加语音"按钮，用于新增自定义音色配置。
Windows文件选择对话框，用于选择音频文件。对话框显示桌面位置的文件列表，包含多个文件夹和一个WAV音频文件"sample123.wav"（264 KB）。底部文件名输入框中已选中该WAV文件，右下角显示"打开"和"取消"按钮。
音色配置界面显示音频文件上传成功后的状态。界面顶部有蓝色提示"音频转换成功，音频文件已添加到音色列表中"。显示三个音色配置卡片，其中音色5的配置框以红色边框突出显示，包含详细的配置字段：名称、音色描述、描述、文件名、语言等。底部有"添加语音"和"保存音色配置"按钮。

接下来我们需要编辑新增音色的相关配置，尤其是“语音对应文本”即需要填写上传音频对应的文本内容，当各种参数配置好后，我们点击"保存语音配置"：

音色配置管理界面显示完整的音色配置过程。界面显示三个音色配置卡片，每个卡片包含音色名称、描述、文件路径、语言设置等详细信息。右下角有"添加语音"按钮和蓝色的"保存音色配置"按钮（红色框突出显示），用于保存新配置的音色设置。
配置好后，若文本转语音服务正在运行，则需要停止服务重新启动，新增音色才能正常使用。

注意：

1. 本团队提供此项功能主要是为了方便学习的目的，请不要滥用或不正当使用他人音色
1. 请在不需要使用时即时关闭相关服务，以免显存占用


## **二、obsidian阅读器新特性使用**
本部分主要介绍1.2 版本与1.1 版本新增功能的教程说明，更基础的obsidian插件说明请参考其他教程视频与学习手册。

### **2.1 copilot 基础功能使用**
为方便使用，我们在2.1.1与2.1.2中收录了相关1.1的开发功能。
#### **2.1.1 多文本内容引用**
通过"copliot + commander"插件的组合，我们可以将命令面板的"Copilot:Add paragraphs to reference"命令加入到文件右键命令当中：

Obsidian编辑器的命令面板界面，显示Copilot插件的功能选项。左侧是文档编辑区域，包含学术文章内容。右侧是已打开的命令面板，显示多个Copilot相关功能，包括"Copilot Chat"、"添加选中内容"、"关于对话框"等选项。其中"添加内容"选项以红色框突出显示，这是用于将选中文本添加到Copilot对话框的功能。
Obsidian的Commander插件配置界面，显示右键菜单自定义功能。界面顶部显示"copilot add paragraphs to reference"命令。中间有一个红色框突出显示的区域，标注"Copilot Add paragraphs to reference"，这是用于将选中文本段落添加到Copilot引用的命令配置。

通过上述方法，我们就可以实现将选中文本添加到copliot的对话框内，并且支持索引语法进行简洁引用，不直接粘贴文本，方便进一步的提示词书写与整理：

Obsidian编辑器界面展示多文本引用功能的使用效果。左侧是文档编辑区域，显示学术文章内容，包含蓝色高亮的选中文本段落。右侧显示Copilot对话框，其中显示了引用的文本内容，使用索引语法进行引用显示，方便用户在AI对话中引用多个文档片段。底部红色框突出显示了添加到对话框的引用内容。
Copilot对话界面截图，显示用户输入"《世界科学技术通史》问题笔记#1507#1511]]这里讲了什么？"的问题，界面顶部显示模型选择为"gemini-2.5-flash-preview-05-20-thinking"，对话框下方显示"0条起始消息"和其他对话设置选项
Copilot对话界面AI回复详情截图，显示AI回复了关于《世界科学技术通史》15世纪内容的详细解答，包含钢铁冶金工业化、第一次世界大战等历史内容的阐述，并在回复最后自动生成了技术创新的影响等进一步学习问题
我们可以对多个文档的指定文段进行引用：

Copilot对话界面的多文档引用展示，界面左侧显示"Relevant Notes"栏目为空（"No relevant notes found"），主对话区域显示多个文档的引用内容，包括《世界科学技术通史》问题笔记和Ideas相关内容，展示了多文档内容整合引用的功能效果



#### **2.1.2 人设自定义**
打开obsidian 的设置界面，找到copliot插件：

Obsidian设置界面截图，显示Copilot插件的设置页面。左侧导航栏中"Copilot"项被红框标出，右侧显示Copilot插件的基本设置选项，包括API Keys、Default Chat Model、Default Mode等配置项，界面为英文界面
目前copilot 插件设置页面新增"捏人设"功能，通过"人设调试版"可以组合出各种人设：

Copilot插件人设调试设置界面，显示"人设调试版"功能区域，包含5个不同的人设标签：角色描述、说话方式、目标、行为逻辑、禁止提示，每个标签都有对应的中文描述内容和编辑按钮，底部有"添加人设"和重置按钮
我们可以在选中区域内新增标签，并填写相应的标签内容(注意如果新加的标签与已有的标签重名，则无法成功添加)：

Copilot人设调试界面的标签编辑功能，显示底部被红框标出的标签名称和标签内容输入区域，用户可以在此添加新的人设标签或编辑现有标签内容
对于已有标签，它会匹配多个标签条目，用于存储这个标签下的各种设定，比如说关于”角色“这个标签，我们可以设置“哲学家”、“科技史研究者”、“欧洲历史研究者”等多个标签条目，但每次一个标签只能选中一个条目。我们可以修改当前选中的标签条目的内容，或者新增/删除对应的标签条目，如下所示：

Copilot人设调试界面的标签条目管理功能，显示"角色描述"标签的下拉选项，包含"科技史研究者"、"欧洲历史研究者"、"哲学史研究者"等多个预设角色选项，红框标出了这些角色选择选项
Copilot人设调试界面的标签编辑和删除功能展示，右侧红框区域显示了标签条目的编辑和删除按钮，用户可以通过这些按钮对人设标签进行修改或删除操作
关于调整不同标签之间的位置，可以通过最左侧的上下箭头实现：

Copilot人设调试界面的标签位置调整功能，左侧蓝框标出了用于调整标签排列顺序的上下箭头按钮，红色箭头指向这些位置调整控件，用户可以通过点击来改变标签的显示顺序
当我们设置好了人设的各种所需要的标签，我们可以在红框处输入名称比如"科技史研究者"，接着点击"添加人设"，即可添加相应人设：

Copilot人设保存界面，显示人设调试版界面中输入人设名称"科技史研究者"的文本框（红框标出），以及"添加人设"按钮，用于将配置好的人设标签组合保存为具体的人设配置
添加好后，可以发现所定义人设出现在了"人设列表"中，且还可以在编辑面板中调整我们人设设定：

Copilot人设管理界面，显示已创建的人设列表，包含"科技史研究者"等人设条目，每个人设都有对应的标签组合显示，底部红框区域显示了人设的详细配置信息和管理选项
最后说明下如何使用，我们可以点击指定人设的左侧按钮，即可切换到想要的人设配置上，后续AI助手就会以这个身份来与我们对话。

当然，你也可以在AI助手的对话框上方切换人设：

Obsidian文档编辑界面，显示正在阅读的英文学术文档"CHAPTER 17 Toolmakers Take Command"，右侧Copilot对话栏显示人设选择下拉菜单（红框标出），用户可以在此选择不同的AI人设进行对话
接下来我们就可以根据我们自己设定的人设与AI更加"亲密"地互动了！

Copilot对话界面展示人设功能效果，显示用户提问"你好，你是谁？"，AI以"科技史研究学者"身份回复，详细介绍了自己的专业背景和研究领域，并主动提出了关于科技史的相关学习问题，展现了人设定制化对话的效果
#### **2.1.3 自动衍生问题**
copilot插件主要新增自动衍生问题、自动语音播放两个功能，下面主要说明自动衍生问题的原理和使用方法，自动语音播放功能说明请看2.2章节。
##### **2.1.3.1 自动衍生问题原理说明**
自动衍生问题主要采取提示词控制大模型输出特定格式的方式实现，也就是说使用特定提示词，使得大模型按照提示词的要求进行输出。如目前插件中默认的提示词，截图如下：

Copilot插件设置界面中的自动衍生问题配置页面。界面显示基础设置、模型、QA、命令、高级、系统提示词、提示词增强、ASR等标签页。在提示词增强页面中，显示「自动衍生数据提示词」开关已启用，下方显示详细的提示词内容，包含问题：1.1、1.2、1.3等编号，最后有「保存配置」按钮。右侧显示自动衍生问题的相关设置。
在对话界面中启动自动衍生问题开关后，向大模型提问"你有什么功能"，返回的内容最后就会带上衍生的问题。

Obsidian界面显示AI对话功能。左侧是文档编辑区域，右侧是「Relevant Notes」面板，显示与当前查询相关的建议提示。面板中包含「Active Note Insights」、「New Link Chat」、「Test UAP」等建议提示项目。右下角显示自动衍生问题等多个功能开关，其中「自动衍生问题」开关已启用。
大模型回复截图如下：

Obsidian对话界面显示AI回复结果。左侧是文档编辑区域，右侧是「Relevant Notes」面板。在面板下方的对话区域中，显示一段关于如何处理特定主题的回复文本，并在文本末尾包含三个衍生问题：问题1关于深入理解某个概念的具体应用步骤；问题2关于寻求相关的实践案例，有助于更好地理解概念的应用；问题3关于与其他概念的区别和联系。
当我们继续向大模型提问"请回答问题2”，copilot本身会将对话的上下文一起发送给大模型，那么就会回答之前衍生出来的问题，从而实现自动问题的衍生与答复。

Obsidian对话界面显示用户输入「请回答问题2」后，AI给出相应回复的场景。左侧是文档编辑区域，右侧是「Relevant Notes」面板。在对话区域中显示用户的问题请求和AI的详细回答，展示了自动衍生问题功能的实际应用效果。##### **2.1.3.2 自动衍生问题提示词与系统提示词关系的详细说明(可跳过)**
开启自动衍生问题开关后，就会将相应的提示词拼接到系统提示词上，如果有选择人设或开启口语化功能，会按照"默认系统提示词" + "人设提示词" + "自动衍生问题提示词" + "口语化提示词"的顺序拼接文本，形成系统提示词。如果某项功能没有开启或没有设置，则忽略不进行拼接。

自动衍生问题提示词可以在设置界面中进行修改，如果修改成其它提示词的要求，也是没有可以的。目前的功能本质上只是**将相应的文本拼接起来作为系统提示词发送给大模型**，前端的开关按钮只是用于控制是否将相应的文本拼接在一起。所以自动衍生问题的提示词，包括2.2章节的口语化提示词功能，都是可以修改成自己需要的提示词，同样也可以把相应的提示词写到人设提示词中，只要确保自己配置的提示词会发送给大模型即可。目前自动衍生问题、口语化等功能的提示词是针对特定场景而进行配置的。

可以在设置界面中查看copilot默认系统提示词，并可通过开关进行控制。截图如下：

Copilot插件设置界面中的系统提示词配置页面。显示「精确默认系统提示词」开关已启用，下方是一个大的文本框，包含详细的英文系统提示词内容，涵盖Claude3作为智能AI助手的行为指导，包括12个详细的操作规则，如何响应用户问题、提供有价值的内容等。文本框下方有「保存配置」按钮。
测试文档界面显示AI对话功能的实际使用场景。左侧是文档编辑区域，包含一段关于某个主题的详细描述文本。右侧是「Relevant Notes」面板，底部显示多个功能开关，包括「自动语音播放」、「自动衍生问题」、「自动语义搜索」、「Suggested Prompt」、「Relevant Note」、「Refresh Node Index」等，这些开关大多处于启用状态。
### **2.2 copilot 语音播放服务接入**
#### **2.2.1 aloud基础配置** 
在AI学习助手启动器上更新aloud插件到最新版本（更新方式参考启动器使用“1.2”部分），并启动文本转语音服务。

接下来要在aloud插件中配置连接本地文本转语音的服务，配置方法如下：进入obsidian 的配置页面，将"Model Provider"切换至"OpenAI Compatible(Advanced)",接下来填写其他参数。本地部署的话"API key"填写任意字符串或者为空都可以，"API URL"一般填写为本地主机的8000端口，也就是填写"[http://localhost:8000](http://localhost:8000/)"（注意,"http://0.0.0.0:8000"可能无法成功访问，请填写"localhost"格式）,“Model"中填写当前已经部署的模型 kokoro或者index-tts模型，填写好后如下图所示:

Aloud插件的OpenAI配置界面。显示「Model Provider」设置为「OpenAI Compatible (Advanced)」，下方包含多个配置项：API key输入框、API URL设置为「http://localhost:8000」、Model设置为「kokoro」。界面还包含Test Voice按钮、User Interface设置和Storage缓存设置等选项。
如果之前已配置aloud插件，只要保证更新aloud插件版本后能正常在笔记中使用文本转语音即可。

接下来，我们可以在obsidian中的任意文档内右键选中指定文本进行语音播放：

Obsidian文档界面中的右键菜单展示。用户选中文本后右键，显示包含多个选项的上下文菜单，其中红框突出显示了「Aloud: read text out loud」选项，用于将选中的文本转换为语音播放。菜单还包含其他常用的文本操作选项。

我们也可以右键选中指定文本，导出这些文本的音频文件，进行播放：

Obsidian文档界面中的另一个右键菜单展示。用户选中文本后右键，显示包含多个选项的上下文菜单，其中红框突出显示了「Aloud: Export selection to audio」选项，用于将选中的文本导出为音频文件。这展示了Aloud插件提供的音频导出功能。
另外，对于音频存储功能，aloud支持对于过去播放过的文字进行缓存，以及设置多长时间缓存自动清除；对于导出的音频文件，aloud也支持指定存放音频文件的地址。如下图：

Aloud插件的详细配置界面展示Storage存储设置。界面包含多个配置区域：缓存类型设置为「Local」、缓存持续时间设置为「168」小时、缓存磁盘使用量显示为「349.25 kB」。下方还有「Audio Folder」音频文件夹设置，显示为「data/音频文件存储」路径，用于指定导出音频文件的存储位置。

#### **2.2.2 语音播放功能说明**
copilot插件目前支持语音播放相关功能（注意使用前需要配置好aloud插件以及文本转语音服务）：

测试文档界面显示Copilot对话功能的使用场景。左侧是文档编辑区域，包含详细的文本内容。右侧是「Relevant Notes」面板，底部显示多个功能开关，其中「自动语音播放」和「自动衍生问题」等开关处于启用状态，展示了语音播放功能的集成。
开启自动语音播放开关，当大模型返回结果后就会自动播放语音。

测试文档界面显示AI对话中的语音播放按钮。左侧是文档编辑区域，右侧是「Relevant Notes」面板。在AI回复消息的下方，红框突出显示了一个语音播放按钮图标，用户可以点击该按钮来播放AI回复内容的语音。这展示了手动触发语音播放的功能。
我们也可以点击AI消息框下的语音播放按钮进行播放。

#### **2.2.3 口语化提示词说明**
设置口语化提示词的目的是通过控制提示词要求大模型输出的文本尽量短，如果返回的文本过长，自动语音播放就会等到结果完全返回后才进行播放，时间较长。这种长文本情况似乎就没有必要进行语音播放，所以添加口语化提示词的方式控制大模型输出。当然不启动口语化开关也是可以进行自动语音播放的。

测试文档界面显示口语化提示词功能的启用状态。左侧是文档编辑区域，右侧是「Relevant Notes」面板，底部显示多个功能开关，其中「口语化」开关处于启用状态，与其他功能如「自动语音播放」、「自动衍生问题」等一起工作，实现更自然的对话体验。
也可以通过设置界面修改口语化提示词，使大模型返回的结果符合自己的设置，类似自动衍生问题的提示词。

Copilot设置界面的口语化提示词配置页面，显示了一个标题为"口语化提示词"的文本框，包含大段的系统提示词文本，用于指导AI以更口语化的方式回答用户问题。界面左侧有设置菜单，右侧是提示词编辑区域，底部有保存按钮。
### **2.3 copilot 语音识别功能使用**
#### **2.3.1 ASR基础配置**
1,打开Copilot插件设置页面,点到ASR

2,看图红色框框可以切换openai服务或者本地服务

3,默认使用本地ASR服务,端口是9000,如果自己想改动,请保持前后端的端口相同。另外请务必开启encode与VAD,这是确保本地服务正常运作的条件

4,如果切换使用openai服务,请在API Setting中填写API Key

Copilot插件ASR语音识别配置界面，显示了ASR选项卡的配置页面。包含Service Type设置，有"Currently using Local Service"标注，强调默认使用本地ASR服务。界面中有API Settings部分显示了API Key和API URL字段，以及Local Service Settings区域，显示端口为9000，并有Encode Audio和VAD Filter两个重要选项的开关设置。
5,File Saving Settings服务于语音识别功能,设置Recordings folder后录音会存入指定位置

6,设置Transcriptions folder后,(在没有指定笔记时)语音识别生成的笔记会存入指定位置

8,General Settings暂时是没有用处的,不必配置

ASR配置界面的File Saving Settings部分，显示了录音文件保存和语音识别结果保存的相关设置。包含Save recording选项用于设置录音保存，Recordings folder用于指定录音文件夹位置，Save transcription用于设置转录保存，Transcriptions folder用于指定转录文件夹位置。下方还有General Settings部分，包含语言设置、自动检测和时间戳相关选项。
#### **2.3.2 录制语音后转文字**
1,如图点击Open recording controls或者在笔记右键后选择语音输入文字

Obsidian笔记界面的右键菜单，显示了文档右键后的操作选项。菜单中包含多个选项，其中"Open recording controls"选项被黑色框突出显示，表示可以通过此选项打开录音控制界面进行语音输入。
2,点击后会弹出录音器,Record为开启录音,Pause暂停,Stop结束录音并转文字

语音录制控制弹窗界面，显示了一个简洁的录音器界面。界面显示录音时长"00:00:10"，包含三个主要按钮：Record（录音）、Pause（暂停）和Stop（停止）。界面右上角有关闭按钮，整体设计简洁明了。

3,**在copilot 对话框中识别语音识别**：在chat对话框使用语音输入,点击voice按钮,再点Record然后说话

Copilot聊天界面的语音输入功能，显示了对话框下方的输入区域，右侧有一个红色方框标注的"voice"按钮，用于启动语音输入功能。界面顶部显示选择的AI模型为"gpt-4.1"。
一个包含大量中文文本的长文档页面，显示了一篇关于本科数学教育的学术文章内容。文档右侧有一个"Suggested Prompts"的侧边栏，提供了一些建议的提示词选项，如"Active from insights"、"Very Link One"等功能建议。这展示了AI助手在处理长文档时的辅助功能。
Copilot对话界面显示语音识别的结果，在输入框中显示了识别出的中文文本"你好你好你好你好你好你好你好"，表明语音转文字功能成功将用户的语音输入转换为文本。界面下方显示了一些统计信息，包括字符数和单词数。


#### **2.3.3 音视频转文字**
1,使用ctrl+p打开命令行, 手打transcri,以下命令都可以对应实现功能

Obsidian命令面板界面，显示了搜索"tr"后出现的Copilot相关命令列表。包含多个语音转录命令选项：Translate to Chinese（翻译为中文）、Transcribe file in view（转录当前视图文件）、Transcribe all files in view（转录视图中所有文件）、Stop Transcription（停止转录）和Add File to Transcription（添加文件到转录）。
2,或者选择任意音频或者视频右键,在菜单中选择🎧Transcribe 稍等推理完成,就会根据语音生成文字

Obsidian文件资源管理器界面，显示了一个日期为"2025-06-07"的文件夹，其中包含多个文件条目。在其中一个音频或视频文件上右键后，出现了上下文菜单，菜单中有一个"🎧Transcribe"选项，用于对选中的音视频文件进行语音转录处理。
3,注意：在插件配置中如图开启时间标注(Enable timestamps)暂时无法使用，不需要开启

ASR设置界面的时间戳配置部分，显示了"Enable timestamps"选项的开关控制，以及下方的"Timestamp format"、"Timestamp interval"等相关设置。界面说明了时间戳功能的各种配置选项，但根据文档说明，此功能暂时无法使用，不需要开启。


## **三、使用反馈**
在使用软件时遇到任何问题，欢迎加入QQ群807831970进行交流和咨询！




# 第三部分：其他功能

## 6.1 LM Studio

LM Studio 是一个本地化的大语言模型运行与开发平台，它允许用户在个人电脑上轻松加载、测试和使用各种开源大语言模型。无需联网、无需云服务费用，所有数据处理均在本地完成，保护隐私的同时提供高效的推理能力。
LM Studio 是一款让你在电脑本地免费运行AI聊天机器人（类似ChatGPT）的软件，无需联网，完全离线使用！  

核心功能
   - 本地运行AI模型：直接在电脑上运行各类AI大模型（如Llama、Mistral等），无需注册账号或付费。  
   - 隐私安全：所有对话内容仅保存在你的电脑，不上传网络。   
   - 简单易用：无需编程知识，界面像聊天软件一样直观。  
适合谁用？  
   - 想体验AI但不想付费/注册账号的用户  
   - 注重隐私、希望离线使用AI的人
   - 对科技感兴趣的小白或开发者

### 6.1.1 下载、安装LM Studio
在百度云盘分享的AI学习助手1.01资料分享的相关软件安装包文件夹中找到相应软件运行安装。

**百度云盘文件结构**：
- 主文件夹：AI学习助手1.01资料分享
- 子文件夹：相关软件安装包
- 包含文件：LM Studio安装程序、Obsidian安装程序等

**LM Studio安装程序信息**：
- 文件名：LM Studio-0.3.6 Setup.exe
- 文件大小：约156 MB
- 文件类型：应用程序安装包
- 安装说明：双击运行安装程序，按照向导提示完成安装

安装完成后，打开软件后先点击右上角skip onbording

**LM Studio首次启动界面**：
- 左侧：LM Studio的Logo和欢迎文字
- 中央：新手引导界面，显示"Welcome to LM Studio"字样
- 右上角："Skip Onboarding"按钮（跳过新手引导）
- 底部：几个快速开始的选项按钮
- 整体界面：深色主题，简洁现代的设计风格

在右下角设置中设置软件为中文

**LM Studio设置界面步骤**：
1. 点击右下角的齿轮图标（Settings）进入设置页面
2. 在设置界面左侧菜单中找到"General"（常规）选项
3. 在右侧设置面板中找到"Language"（语言）下拉菜单
4. 从下拉菜单中选择"简体中文"选项
5. 设置立即生效，界面语言切换为中文显示

**设置后的中文界面特点**：
- 菜单栏显示为：聊天、我的模型、发现、开发者
- 按钮文字变为中文：下载、加载、设置等
- 提示信息和说明文字都显示为中文

### 6.1.2 LM Studio功能介绍
>[!info] LM Studio官方文档： https://lm-studio.cn/docs/basics

软件主要有四个模块：聊天（Chat）、开发者（Developer）、我的模型 （My Models）、发现 （Discover）
1. **聊天（Chat）**：顾名思义就是和AI聊天的地方；
2. **开发者（Developer）**：这个板块是为懂点技术的人或者想让其他软件也能用你本地AI的人准备的，它把你的LMStudio变成一个本地AI服务，单纯聊天的话用不到；
3. **我的模型（My Models）**：管理现在手上有的所有模型，从"发现"板块下载下来的模型，或者你自己想办法弄到并存放到特定文件夹的模型，都会显示在这里；
4. **发现（Discover）**：可以调整运行环境，相当于一个"AI模型商店"或"模型图书馆"。这里展示了大量别人训练好的、可以下载使用的AI模型。

**LM Studio主界面模块布局**：
- **顶部导航栏**（从左到右）：
  - 聊天（Chat）：AI对话界面
  - 开发者（Developer）：API服务设置
  - 我的模型（My Models）：已下载模型管理
  - 发现（Discover）：模型下载和运行环境配置
- **左侧边栏**：当前模块的具体功能选项
- **主内容区**：显示当前选中模块的详细内容
- **底部状态栏**：显示当前软件状态和版本信息

1. 我们先从**发现（Discover）**开始介绍软件的使用
Model Search中可以搜索并一键下载匹配电脑配置的模型，另外建议在设置中将模型加载保护调整为宽松或平衡

**模型搜索界面功能**：
- **搜索框**：顶部搜索栏，可输入模型名称关键词
- **模型列表**：显示搜索结果，每个模型包含：
  - 模型名称和版本号
  - 模型大小（如4B、7B、13B等参数量）
  - 下载按钮和状态显示
  - 模型简介和特性标签

**模型加载保护设置**：
- 在右下角设置中找到"模型加载保护"选项
- 保护级别选项：
  - 严格：仅加载经过验证的安全模型
  - 平衡：在安全性和兼容性间平衡（推荐）
  - 宽松：允许加载更多类型的模型
- 建议选择"平衡"或"宽松"以获得更好的兼容性

模型名称后面的4B、8B等为模型参数量，模型参数量越大，模型越聪明；但模型越大运算占的显存越大，速度越慢。另外带有**CORS**功能的模型会显示视觉功能启用

**模型参数量选择说明**：
- **4B模型**：适合低配置电脑，运行速度快，占用显存约2-3GB
- **7B-8B模型**：中等配置电脑，平衡性能与速度，占用显存约4-6GB
- **13B-14B模型**：高配置电脑，更强能力，占用显存约8-10GB
- **更大模型**：需要专业级硬件，占用显存15GB以上

**CORS功能模型特点**：
- 模型卡片右上角显示"Vision"或"视觉"标签
- 支持图片输入和理解功能
- 可以处理文本+图像的多模态任务
- 模型名称通常包含"vision"、"vlm"等关键词
- 下载时会显示特殊的功能图标

Runtime中配置你的模型运行环境，分为三种模式CPU、CUDA、Vulkan，下载相应模型并启用
- CPU：使用CPU运行模型，电脑没有好显卡或兼容性出现问题时可以使用，但速度最慢，适合临时使用
- CUDA：电脑中的显卡是英伟达的显卡且不存在其他品牌显卡时使用，效果最佳
- Vulkan：显卡不是英伟达显卡，或英伟达显卡与其他显卡混搭时使用，速度快，通用性强

**Runtime运行环境配置界面**：
- **左侧模式选择**：
  - CPU Runtime：显示CPU图标，适用于纯CPU运行
  - CUDA Runtime：显示NVIDIA图标，需要NVIDIA显卡
  - Vulkan Runtime：显示Vulkan图标，通用GPU加速
- **中间状态显示**：
  - 已安装：绿色对勾图标，表示运行环境已就绪
  - 未安装：灰色图标，需要下载安装
  - 安装中：进度条显示下载安装进度
- **右侧操作按钮**：
  - 下载按钮：安装对应的运行环境
  - 设置按钮：配置运行环境参数

2. **我的模型 （My Models）**
存放着已经下好的模型，模型目录可以自行设置下载模型的存放位置

**我的模型界面布局**：
- **顶部工具栏**：
  - 搜索框：可搜索已下载的模型
  - 排序选项：按名称、大小、下载时间排序
  - 文件夹图标：打开模型存储目录
- **模型列表显示**：
  - 模型名称和版本信息
  - 模型文件大小（如3.8GB、7.2GB等）
  - 下载日期和时间
  - 加载按钮：快速加载模型到聊天界面
- **右键菜单选项**：
  - 加载模型：启动模型用于对话
  - 模型信息：查看详细参数和说明
  - 删除模型：从本地移除模型文件

3. **开发者（Developer）**
开发者模块，可以在左侧启用端口，端口未开启的话只能在LM Studio内部使用模型，打开之后可其他软件可以通过AIP调用的方式使用加载的模型。

**开发者界面功能区域**：
- **左侧服务器控制面板**：
  - 启动服务器按钮：开启本地API服务
  - 端口设置：默认为1234端口，可自定义
  - 服务状态指示：绿色表示运行中，红色表示已停止
- **中间API信息显示**：
  - 本地服务地址：http://localhost:1234
  - API密钥设置：可选择是否需要密钥验证
  - 兼容性设置：OpenAI API格式兼容
- **右侧使用说明**：
  - 示例代码片段：展示如何调用API
  - 测试工具：内置API测试功能
  - 日志输出：显示API调用记录和错误信息

在设置中可以启用"在网络中提供服务"，这可以使同一局域网下的其他设备使用本机上的模型，比如手机或同一网络下的其他电脑等，CORS启用后可以上传图片、音频等格式给模型进行处理（当然，需要先配置好具有CORS功能的模型）

**网络服务设置界面**：
- **网络访问设置**：
  - "在网络中提供服务"开关：允许局域网设备访问
  - 绑定地址选择：0.0.0.0（所有网络接口）或特定IP
  - 端口配置：设置服务监听端口
- **安全设置**：
  - API密钥开关：是否需要密钥验证
  - 密钥生成按钮：自动生成安全密钥
  - 允许的来源：设置哪些IP地址可以访问
- **CORS配置**：
  - 启用CORS开关：允许跨域资源共享
  - 文件上传支持：支持图片、音频文件上传
  - 多模态功能：文本+图像联合处理

选取要加载的模型

**模型选择界面**：
- **模型列表区域**：
  - 显示所有已下载的可用模型
  - 每个模型显示名称、大小、类型标签
  - 模型状态指示：可用、正在加载、已加载等
- **模型信息面板**：
  - 选中模型的详细参数信息
  - 内存和显存需求估算
  - 模型能力说明（文本、代码、多模态等）
- **加载选项**：
  - 快速加载：使用默认参数
  - 自定义加载：手动配置加载参数
  - 加载按钮：确认开始加载模型

>开启"手动选择模型加载参数"选项后，点击相应模型修改参数，**设置完成后,勾选Remember settings for "xxxx"，然后加载模型**，主要设置如下：
>- Auto Unload If Idle (TTL)：模型闲置 Xmin后自动卸载，释放显存/内存
>- 上下文长度：模型能"记住"的对话字数上限
>- GPU卸载：将模型拆分部分到显卡运行（显存不足时用CPU辅助）
>- CPU Thread Pool Size：调用 CPU 核心数 处理计算
>- 评估批处理大小：单次处理文本片段数量（越大越快，但更吃显存）
>- **保持模型在内存中**：将模型预存在内存中，会长期占用内存，默认是开启的，但是建议关掉，除非你的模型相对你的电脑来说很小，没有太大影响
>- **尝试mmap（）**：用内存映射加载模型，默认开启，同样建议关掉

**模型参数调整界面**：
- **左侧参数列表**：
  - 每个参数都有详细的中英文说明
  - 滑动条或输入框形式设置数值
  - 参数旁边显示推荐值和当前值
- **右侧预览面板**：
  - 显示当前配置的内存/显存占用预估
  - 加载时间和运行速度预测
  - 兼容性检查结果
- **底部操作区域**：
  - "Remember settings for [模型名]"复选框（重要）
  - 重置为默认值按钮
  - 开始加载模型按钮

**模型加载过程显示**：
- 加载进度条：显示模型加载到内存/显存的进度
- 状态信息：当前正在加载的模型层数和总层数
- 资源占用：实时显示内存和显存使用情况
- 加载完成后显示"Model loaded successfully"提示

加载模型后可以在任务管理器的性能界面看到当前占用的显存大小

**Windows任务管理器性能监控**：
- **打开方式**：按Ctrl+Shift+Esc打开任务管理器，点击"性能"标签
- **GPU监控区域**：
  - 左侧选择GPU（如GPU 0、GPU 1等）
  - 中间显示GPU利用率曲线图
  - 右上角显示当前GPU使用率百分比
- **显存使用信息**：
  - "专用GPU内存"：显示已使用/总共显存容量（如6.2GB/8.0GB）
  - "共享GPU内存"：系统内存分配给GPU的部分
  - "GPU内存使用率"：百分比形式显示显存占用
- **实时监控**：曲线图实时更新，可观察到模型加载和运行时的显存变化

4. **聊天（Chat）**
模型部署好了之后，就可以在聊天界面使用，使用方法和市面上的AI是相同的，点击右上角的小按钮可以进行对话设置
>1. 系统提示：设定AI的风格，例如"你是个幽默的助手"、"你是个温柔的..."
>2. 温度：低温（0.1~0.5），保守输出，答案稳定如教科书；高温（0.7~1.0）：创意放飞，可能胡说八道但更有趣

**LM Studio聊天界面布局**：
- **顶部工具栏**：
  - 当前加载的模型名称显示
  - 右上角设置按钮（齿轮图标）
  - 新建对话按钮
- **聊天对话区域**：
  - 左侧显示用户消息（蓝色气泡）
  - 右侧显示AI回复（灰色气泡）
  - 支持代码高亮和Markdown格式
- **底部输入区域**：
  - 文本输入框：支持多行文本输入
  - 发送按钮：点击或按Enter发送消息
  - 文件上传按钮：上传图片等文件（需支持多模态的模型）
- **对话设置面板**（点击设置按钮打开）：
  - 系统提示词输入框：设定AI角色和行为
  - 温度滑动条：0.0-1.0范围调节创造性
  - 最大Token数：限制回复长度
  - 对话历史保存选项

## 6.2 硅基流动

硅基流动（SiliconFlow）是一个专注于生成式人工智能（AIGC）的云服务平台，旨在为开发者、企业及个人提供"低成本、高效率的AI模型调用服务"。你可以将它理解为"AI模型的云端超市"，无需自己搭建复杂的服务器，通过简单的API即可调用各类先进的大模型15。

 核心特点：

1. 模型丰富：集成50+主流开源模型，涵盖文本生成（如DeepSeek R1）、图像生成（如Stable Diffusion）、代码生成（如Qwen-Coder）等多领域17。
    
2. 高性价比：部分小模型（如9B参数以下）永久免费，新用户注册赠送2000万Tokens（相当于生成约400万汉字），大幅降低使用门槛15。
    
3. 简单易用：提供统一API接口和在线调试工具（Playground），无需代码基础也能快速上手57。

### 6.2.1 如何在Obsidian中接入硅基流动？

### 6.2.2 步骤1：注册并获取API密钥

1. 注册账号：访问[硅基流动官网](https://cloud.siliconflow.cn/)，使用手机号或邮箱注册（邀请码可额外获得免费额度）。
    
2. 创建API密钥：登录后进入【API密钥】页面，点击"新建密钥"生成唯一的密钥（类似密码），妥善保存备用。
    
**硅基流动API密钥创建界面**：
- **页面导航**：登录后在顶部导航栏找到"API密钥"或"开发者"选项
- **密钥管理区域**：
  - 显示已有的API密钥列表
  - 每个密钥显示名称、创建时间、状态
  - "新建密钥"按钮位于页面右上角
- **创建密钥弹窗**：
  - 密钥名称输入框：给密钥起一个便于识别的名字
  - 权限设置：选择密钥可访问的服务范围
  - 有效期设置：设置密钥的过期时间
- **密钥显示**：
  - 创建成功后显示完整的API密钥字符串
  - 提供复制按钮一键复制密钥
  - 安全提示：密钥只显示一次，需要立即保存

### 6.2.3 步骤2：配置Obsidian Copilot插件

需要安装Copilot插件，打开Copilot插件，找到Model下的"add Custom Model"

**Copilot插件Model配置界面**：
- **设置路径**：Obsidian设置 → 第三方插件 → Copilot → Model标签页
- **模型管理区域**：
  - 显示已配置的Chat Model和Embedding Model列表
  - 每个模型显示名称、提供商、状态（启用/禁用）
- **添加模型按钮**：
  - "Add Custom Model"按钮位于模型列表下方
  - 点击后弹出模型配置对话框
- **模型配置选项**：
  - Enable/Disable开关：控制模型启用状态
  - CORS选项：启用跨域资源共享
  - 编辑按钮：修改已有模型配置
  - 删除按钮：移除不需要的模型

在硅基流动官网找到要使用的模型，复制模型名称，输入base URL（例如https://api.siliconflow.cn/v1），填入API KEY ，最后勾选下方Enable CORS，点击Verify验证成功后，即可点击Add Model添加硅基流动提供的模型。

**模型配置表单详细说明**：
- **Model Name**（必填）：从硅基流动官网复制精确的模型名称
  - 示例：deepseek-ai/DeepSeek-R1、Qwen/Qwen2.5-Coder-32B-Instruct
- **Display Name**（可选）：自定义显示名称，便于识别
  - 示例：SiliconFlow-DeepSeek-R1
- **Provider**：选择"OpenAI"（硅基流动使用OpenAI兼容API）
- **Base URL**：输入硅基流动API地址
  - 固定值：https://api.siliconflow.cn/v1
- **API Key**：粘贴从硅基流动获取的API密钥
- **Model Capabilities**：根据模型类型勾选
  - Reasoning：文本推理能力（聊天模型必选）
  - Vision：视觉理解能力（多模态模型选择）
- **Enable CORS**：必须勾选，允许Obsidian访问外部API
- **验证和添加**：
  - 点击"Verify"按钮测试连接
  - 验证成功后点击"Add Model"完成添加

## 感谢

感谢所有为项目付出的朋友们，因为你们才让我们的开源项目得以一步步落地！以下是贡献者及内容：

### 1.1 版本 贡献名单

| 贡献者   | 贡献内容                       |
| ----- | -------------------------- |
| 柯南    | obsidian插件开发、TTS多平台整合包制作   |
| 罗鉴    | ASR后端开发、ASR多平台整合包制作、使用文档编辑 |
| 南云    | TTS后端开发                    |
| 生年不满百 | obsidian插件开发               |
| 岂能    | obsidian插件开发、学习助手整合、使用文档编辑 |
| 教你说再见 | obsidian 插件开发、使用文档编辑       |
| 简单（康） | obsidian插件开发               |
| watanuki | AI学习助手使用文档大纲制定、文本整合与润色 |
| geist！ | AI学习助手使用文档编写-LMStudio部分 |
| 魔ァ「黑羽」 | AI学习助手文档整合调整、版本管理 |
| 强尼是我我是强尼 | AI学习助手使用文档1.01版初版编撰 |
| watanuki | AI学习助手使用文档6.b硅基流动部分编写 |
